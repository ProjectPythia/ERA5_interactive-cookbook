{"version":2,"kind":"Notebook","sha256":"8034f773b8aff0397492fa9bac6425bca574ddce193a710f1d892108be92961b","slug":"notebooks.data-preprocessing","location":"/notebooks/05_data_preprocessing.ipynb","dependencies":[],"frontmatter":{"title":"Generate annual/yearly zarr stores from hourly ERA5 NetCDF files on NCAR’s Research Data Archive","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/projectpythia/ERA5_interactive-cookbook","affiliations":[{"id":"University at Albany (State University of New York)","name":"University at Albany (State University of New York)"},{"id":"UCAR/NCAR","name":"UCAR/NCAR"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/ERA5_interactive-cookbook/blob/main/notebooks/05_data_preprocessing.ipynb","exports":[{"format":"ipynb","filename":"05_data_preprocessing.ipynb","url":"/ERA5_interactive-cookbook/build/05_data_preprocessin-72710266bc335f6bba71d1c4a40f56be.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview and Warning: Please Read","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"a6wLmoYwhU"}],"identifier":"overview-and-warning-please-read","label":"Overview and Warning: Please Read","html_id":"overview-and-warning-please-read","implicit":true,"key":"TsHPSaPtHd"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"ERA5 data on NCAR is stored in hourly NetCDF files. Therefore, it is necessary to create intermediate ARCO datasets for fast processing.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"rIwyp5Pych"}],"key":"MhUykyOBbR"}],"key":"KdApEgeU7z"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In this notebook, we read hourly data from NCAR’s publicly accessible ERA5 collection using an intake catalog, compute the annual means and store the result using zarr stores.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"IXZjiRPDli"}],"key":"y8JhyoenAd"}],"key":"UCXfgGFSQy"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"If you don’t have write permision to save to the Research Data Archive (RDA), please save the result to your local folder.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"MmWShoPN5C"}],"key":"bLwCY9aUWE"}],"key":"VslQ79jZ8X"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"If you need annual means for the following variables, please don’t run this notebook. The data has already been calculated and can be accessed via https from ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"bB6BMSWBED"},{"type":"link","url":"https://data.rda.ucar.edu/pythia_era5_24/annual_means/","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"https://​data​.rda​.ucar​.edu​/pythia​_era5​_24​/annual​_means/","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"mPunHOsxCS"}],"urlSource":"https://data.rda.ucar.edu/pythia_era5_24/annual_means/","key":"ih8KDrMLuM"}],"key":"Zf1zxems6S"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Air temperature at 2 m/ VAR_2T (","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"CmMRtrgAgs"},{"type":"link","url":"https://data.rda.ucar.edu/pythia_era5_24/annual_means/temp_2m_annual_1940_2023.zarr","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"https://​data​.rda​.ucar​.edu​/pythia​_era5​_24​/annual​_means​/temp​_2m​_annual​_1940​_2023​.zarr","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Yo0awEfYBI"}],"urlSource":"https://data.rda.ucar.edu/pythia_era5_24/annual_means/temp_2m_annual_1940_2023.zarr","key":"C0bz4GD1Pv"},{"type":"text","value":")","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"YVftwVGImA"}],"key":"gyInFjkslf"}],"key":"MGMKulO23M"}],"key":"hTF9rrRccS"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Otherwise, please run this script once to generate the annual means.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"hCeikZgpLp"}],"key":"DOS9EzVqQO"}],"key":"LY5RflWb7u"}],"key":"TnoMQrlXol"}],"key":"VY0M9xug2n"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kwxxT31h3q"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"i9OJqivfXz"},{"type":"table","position":{"start":{"line":3,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Tjn3Ir58DK"}],"key":"pMcIV6mmfA"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"aRCbXDsaGs"}],"key":"uPD9u8GnDR"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"liOKN9YjMQ"}],"key":"GyLq1nTtR4"}],"key":"DPhkliIsM4"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/xarray.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Intro to Xarray","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"DK7CKWxZ46"}],"urlSource":"https://foundations.projectpythia.org/core/xarray.html","key":"btt5ttkeH3"}],"key":"AUwSQuG1B9"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"pGeLYQb74y"}],"key":"hA39dupKDD"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[],"key":"pNOXGUMGKY"}],"key":"T92BXlqhMU"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://projectpythia.org/intake-cookbook/notebooks/intake_introduction.html","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Intro to Intake","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"c8eeTIjTdZ"}],"urlSource":"https://projectpythia.org/intake-cookbook/notebooks/intake_introduction.html","key":"kwJTxhYBCO"}],"key":"KuJBfiXqyc"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"AQzdlzUA1F"}],"key":"ftISLMFyeH"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[],"key":"TF22IXwv1o"}],"key":"MJnjIFOP1G"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://zarr.readthedocs.io/en/stable/","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Understanding of Zarr","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"f4xrYHDNAe"}],"urlSource":"https://zarr.readthedocs.io/en/stable/","key":"nkFmKFpmvw"}],"key":"mpiBs4fNmm"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"d1GxjDsdQm"}],"key":"cha72pwZSm"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[],"key":"l2V0EnnvIZ"}],"key":"ugFZRRmYHC"}],"key":"HeJSODo12B"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"vYxadCAZ1B"}],"key":"yvcd12nwZd"},{"type":"text","value":": 30 minutes","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"HvXZwCginS"}],"key":"lDZfC1MHk1"}],"key":"YBlpzlmkDP"}],"key":"jLBl2enJcv"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bJIP2tWgPy"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"kCf92anROp"}],"key":"WK6LFY331V"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import glob\nimport re\nimport matplotlib as plt\nimport numpy as np\nimport scipy as sp\nimport xarray as xr\nimport intake\nimport intake_esm\nimport pandas as pd","key":"WN5Y0LbCmE"},{"type":"output","id":"koGbouAaxq6TQhdfOStFS","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mModuleNotFoundError\u001b[39m                       Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[1]\u001b[39m\u001b[32m, line 7\u001b[39m\n\u001b[32m      5\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mscipy\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01msp\u001b[39;00m\n\u001b[32m      6\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mxarray\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mxr\u001b[39;00m\n\u001b[32m----> \u001b[39m\u001b[32m7\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mintake\u001b[39;00m\n\u001b[32m      8\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mintake_esm\u001b[39;00m\n\u001b[32m      9\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mpandas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mpd\u001b[39;00m\n\n\u001b[31mModuleNotFoundError\u001b[39m: No module named 'intake'","ename":"ModuleNotFoundError","evalue":"No module named 'intake'"}],"key":"G4uk6qBrtE"}],"key":"TyP7hVOl3z"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import dask\nfrom dask.distributed import Client, performance_report\nfrom dask_jobqueue import PBSCluster","key":"iHXlcZvROV"},{"type":"output","id":"QhcffRr2oSW4A3OucM7LS","data":[],"key":"hfEvVK81Sm"}],"key":"Vaf0vqqx5C"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"######## File paths ################\nrda_scratch       = \"/gpfs/csfs1/collections/rda/scratch/harshah\"\nrda_data          = \"/gpfs/csfs1/collections/rda/data/\"\n#########\nrda_url           = 'https://data.rda.ucar.edu/'\nera5_catalog      = rda_url + 'pythia_era5_24/pythia_intake_catalogs/era5_catalog.json'\n#alternate_catalog = rda_data + 'pythia_era5_24/pythia_intake_catalogs/era5_catalog_opendap.json'\nannual_means      =  rda_data + 'pythia_era5_24/annual_means/'\n######## \nzarr_path         = rda_scratch + \"/tas_zarr/\"\n##########\nprint(annual_means)","key":"EqkccIlKpK"},{"type":"output","id":"i59bAl62m5xkfxKqoDAJo","data":[],"key":"UNXU920gbj"}],"key":"PVUJLZSbDk"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a Dask cluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mkwSO2kUK6"}],"identifier":"create-a-dask-cluster","label":"Create a Dask cluster","html_id":"create-a-dask-cluster","implicit":true,"key":"uaPrp6zVXF"}],"key":"GVukveIjD7"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Dask Introduction","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xxThXDRgDe"}],"identifier":"dask-introduction","label":"Dask Introduction","html_id":"dask-introduction","implicit":true,"key":"ltAdyDvZub"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"link","url":"https://www.dask.org/","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Dask","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WHleehRXTy"}],"urlSource":"https://www.dask.org/","key":"rgYaMDzFBh"},{"type":"text","value":" is a solution that enables the scaling of Python libraries. It mimics popular scientific libraries such as numpy, pandas, and xarray that enables an easier path to parallel processing without having to refactor code.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"DjC71HY31Q"}],"key":"BHE3kDXSkQ"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"There are 3 components to parallel processing with Dask: the client, the scheduler, and the workers.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"RAfLsbYFjy"}],"key":"DfE0s8VW8t"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"The Client is best envisioned as the application that sends information to the Dask cluster. In Python applications this is handled when the client is defined with ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"dGSNFsZRdX"},{"type":"inlineCode","value":"client = Client(CLUSTER_TYPE)","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"KLtYZlnqpT"},{"type":"text","value":". A Dask cluster comprises of a single scheduler that manages the execution of tasks on workers. The ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ncf2hYva4a"},{"type":"inlineCode","value":"CLUSTER_TYPE","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"b7FipyVUkm"},{"type":"text","value":" can be defined in a number of different ways.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"zfzJsUEds2"}],"key":"ilfRlgyzTQ"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"There is LocalCluster, a cluster running on the same hardware as the application and sharing the available resources, directly in Python with ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"MOtA8kTkO4"},{"type":"inlineCode","value":"dask.distributed","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"wqSeGiGqSc"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"k8siirHT0q"}],"key":"pkOnxXonWb"}],"key":"dPiD1u6llE"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"In certain JupyterHubs Dask Gateway may be available and a dedicated dask cluster with its own resources can be created dynamically with ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"jbVJU2WbVN"},{"type":"inlineCode","value":"dask.gateway","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"rgTO1vs1ju"},{"type":"text","value":".","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"qMKDKWnIWe"}],"key":"XgwGfl9y71"}],"key":"QIvGVYODHI"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"On HPC systems ","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"VR1qvhfyp2"},{"type":"inlineCode","value":"dask_jobqueue","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"eogPtmeDCk"},{"type":"text","value":" is used to connect to the HPC Slurm and PBS job schedulers to provision resources.","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"cUlFBfFGuh"}],"key":"OavRDoTdnX"}],"key":"uVtCROuz1G"}],"key":"VrMq7bdFeY"},{"type":"paragraph","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"D9Y0bufRBx"},{"type":"inlineCode","value":"dask.distributed","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"L7v0JjhUB9"},{"type":"text","value":" client python module can also be used to connect to existing clusters. A Dask Scheduler and Workers can be deployed in containers, or on Kubernetes, without using a Python function to create a dask cluster. The ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"hJgBWk3r50"},{"type":"inlineCode","value":"dask.distributed","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"nLHFec6HbZ"},{"type":"text","value":" Client is configured to connect to the scheduler either by container name, or by the Kubernetes service name.","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"OaSDlLAvc2"}],"key":"X4ahZgF8gM"}],"key":"MZSAe77J2S"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Select the Dask cluster type","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vmfjjW0M54"}],"identifier":"select-the-dask-cluster-type","label":"Select the Dask cluster type","html_id":"select-the-dask-cluster-type","implicit":true,"key":"V4crHc2gge"}],"key":"nqGQPbDS5M"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The default will be ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yBKJ1XX6CE"},{"type":"inlineCode","value":"LocalCluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UADLbr0hCO"},{"type":"text","value":" as that can run on any system.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lcxlGqmKcW"}],"key":"C1zjyaGHRt"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"If running on a HPC computer with a PBS Scheduler, set to True. Otherwise, set to False.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bLOGaWVOwe"}],"key":"MY0VQzRokI"}],"key":"JiwMI7K3A8"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"USE_PBS_SCHEDULER = True","key":"vTKjnPrZEG"},{"type":"output","id":"mYmhxed_Mkn9MdxS3e1f9","data":[],"key":"V4azFcaXxb"}],"key":"OPcRW4slrx"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"If running on Jupyter server with Dask Gateway configured, set to True. Otherwise, set to False.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"V59gP5MdKz"}],"key":"Ww7GAO8Sm5"}],"key":"j2ihAybfbJ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"USE_DASK_GATEWAY = False","key":"rhioE1oKpi"},{"type":"output","id":"5WtCm813je7M2cXP9N7h9","data":[],"key":"TJvmDJzZOy"}],"key":"YE8h8YVWJn"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Python function for a PBS cluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bj1iQCmVhk"}],"key":"kQslFPc2T6"}],"key":"Q3AzaJPmQi"}],"key":"TppLw8ZeW7"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Create a PBS cluster object\ndef get_pbs_cluster():\n    \"\"\" Create cluster through dask_jobqueue.   \n    \"\"\"\n    from dask_jobqueue import PBSCluster\n    cluster = PBSCluster(\n        job_name = 'dask-pythia-24',\n        cores = 1,\n        memory = '4GiB',\n        processes = 1,\n        local_directory = rda_scratch + '/dask/spill',\n        resource_spec = 'select=1:ncpus=1:mem=8GB',\n        queue = 'casper',\n        walltime = '1:00:00',\n        #interface = 'ib0'\n        interface = 'ext'\n    )\n    return cluster","key":"NC0Rb7EZc8"},{"type":"output","id":"k-ERRjmLso-yMlvUZpu-M","data":[],"key":"alYZTgWqjT"}],"key":"SLe7FjPcNN"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Python function for a Gateway Cluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xZD0q5qwTr"}],"key":"d6b5YOthqH"}],"key":"Pwxf0mqrTN"}],"key":"NENNTDDyd6"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def get_gateway_cluster():\n    \"\"\" Create cluster through dask_gateway\n    \"\"\"\n    from dask_gateway import Gateway\n\n    gateway = Gateway()\n    cluster = gateway.new_cluster()\n    cluster.adapt(minimum=2, maximum=4)\n    return cluster","key":"pPvwoXUSlZ"},{"type":"output","id":"oFwSlnCmyTNHeGnC0olIv","data":[],"key":"Y1i5S4hUPy"}],"key":"WO94NPyTaQ"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Python function for a Local Cluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WQcKc4tI9M"}],"key":"QMeu8k9t6e"}],"key":"LxiCHy3mfH"}],"key":"eR47DtdOD2"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def get_local_cluster():\n    \"\"\" Create cluster using the Jupyter server's resources\n    \"\"\"\n    from distributed import LocalCluster, performance_report\n    cluster = LocalCluster()    \n\n    cluster.scale(4)\n    return cluster","key":"ddoph0i0s6"},{"type":"output","id":"7dMqfT5VC_Iqs65zrhbUq","data":[],"key":"JNTWQmMNCm"}],"key":"qxVYoIXgIP"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Python logic to select the Dask Cluster type","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oJ3Pfm7oNz"}],"key":"DU5qBuSc4q"}],"key":"LfsHe62nwv"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This uses True/False boolean logic based on the variables set in the previous cells","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ej9AourVJz"}],"key":"nlzTkbNgab"}],"key":"qQj1sa0bVJ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Obtain dask cluster in one of three ways\n\nif USE_PBS_SCHEDULER:\n    cluster = get_pbs_cluster()\nelif USE_DASK_GATEWAY:\n    cluster = get_gateway_cluster()\nelse:\n    cluster = get_local_cluster()\n\n# Connect to cluster\nfrom distributed import Client\nclient = Client(cluster)\n\n# Display cluster dashboard URL\ncluster","key":"dVe5d6gRB3"},{"type":"output","id":"rPKg55shyTnoKGXoMxTBg","data":[],"key":"ByXzneea6P"}],"key":"L302QqLxSh"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Find data using intake catalog","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Qft9Y4pL2x"}],"identifier":"find-data-using-intake-catalog","label":"Find data using intake catalog","html_id":"find-data-using-intake-catalog","implicit":true,"key":"I1viAszOM8"}],"key":"Epn6UrFxkr"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"era5_cat = intake.open_esm_datastore(era5_catalog)\nera5_cat","key":"YWmxz0HeFQ"},{"type":"output","id":"0eNjppz7ouxdZduC3gUJx","data":[],"key":"MTUBaVU7Fh"}],"key":"u5ZOLShYEO"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"era5_cat.df[['long_name','variable']].drop_duplicates().head()","key":"jxpJt0vUB1"},{"type":"output","id":"_VlITNb71zU04mCirxC5h","data":[],"key":"NFqSvc4asP"}],"key":"ZAbr8qtEMK"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Select variable of interest","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WabVp5ZUsp"}],"identifier":"select-variable-of-interest","label":"Select variable of interest","html_id":"select-variable-of-interest","implicit":true,"key":"lLFLZdpOYh"}],"key":"eYbwstqhyP"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"######## Examples of other Variables ##############\n# MTNLWRF = Outgoing Long Wave Radiation (upto a sign), Mean Top Net Long Wave Radiative Flux\n# rh_cat = era5_cat.search(variable= 'R') # R =  Relative Humidity\n# olr_cat = era5_cat.search(variable ='MTNLWRF')\n# olr_cat\n############ Access temperature data ###########\ntemp_cat = era5_cat.search(variable='VAR_2T',frequency = 'hourly')\ntemp_cat","key":"oYBdmlQ8KY"},{"type":"output","id":"9ANps5SvA-6Gfh-zGMsAF","data":[],"key":"oCjumB0VKt"}],"key":"ajbPrXVq8s"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Define the xarray_open_kwargs with a compatible engine, for example, 'scipy'\nxarray_open_kwargs = {\n    'engine': 'h5netcdf',\n    'chunks': {},  # Specify any chunking if needed\n    'backend_kwargs': {}  # Any additional backend arguments if required\n}","key":"KW6RXQBTZa"},{"type":"output","id":"graWWqe1yGQU2MzzzxrUm","data":[],"key":"jp0H9IbsLp"}],"key":"lhhfM4Ltln"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\ndset_temp = temp_cat.to_dataset_dict(xarray_open_kwargs=xarray_open_kwargs)","key":"y6wLpF8oS9"},{"type":"output","id":"e7agwjXfnKg6mZsp78QT1","data":[],"key":"aavseZGdfr"}],"key":"OCGRjlF9Tp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"dset_temp.keys()","key":"blSaeCSJ7U"},{"type":"output","id":"MeXvgUI6fmbLZbqN59GOO","data":[],"key":"HWh3nUF8zH"}],"key":"Upm8zodjce"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"temp_2m = dset_temp['an.sfc'].VAR_2T\ntemp_2m","key":"qj9GafZ6Ms"},{"type":"output","id":"0A0CMzoBg_Ubuy8807YuM","data":[],"key":"xwHOPO1xxK"}],"key":"QAULI3gSOL"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"temp_2m_annual = temp_2m.resample(time='1Y').mean()\ntemp_2m_annual","key":"AJsh4qbMrC"},{"type":"output","id":"o5MrdwYjh_NtN-iFDRPqz","data":[],"key":"R62wPvQmzS"}],"key":"yRH3L1Z2uA"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Save the notbeook","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hLDPTBMEI6"}],"identifier":"save-the-notbeook","label":"Save the notbeook","html_id":"save-the-notbeook","implicit":true,"key":"UgQ6Q4zjZj"}],"key":"oaalX2VT0h"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# temp_2m_annual.to_dataset().to_zarr(zarr_path + \"e5_tas2m_monthly_1940_2023.zarr)","key":"qe2cAw6drA"},{"type":"output","id":"ZF5Ma_-1jYuZjtrbpqacl","data":[],"key":"Dwnj9LNKIe"}],"key":"cSH6mtUdu8"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"temp_2m_monthly = xr.open_zarr(zarr_path + \"e5_tas2m_monthly_1940_2023.zarr\").VAR_2T\ntemp_2m_monthly","key":"AxsYRVwG2x"},{"type":"output","id":"LzBtMOI8NPI-XOGaFTaDQ","data":[],"key":"UtOYBtNU6c"}],"key":"RYF9q1tRaw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"temp_2m_annual = temp_2m_monthly.resample(time='1Y').mean()\ntemp_2m_annual = temp_2m_annual.chunk({'latitude':721,'longitude':1440})\ntemp_2m_annual = temp_2m_annual.drop_isel({'time':-1}) # Drop 2024 data\ntemp_2m_annual","key":"CSFi3Uiuxr"},{"type":"output","id":"jFODWslLH_oWEUpThAwcZ","data":[],"key":"breTQZgISN"}],"key":"NuzdnZZieM"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Save annual mean to annual_means folder within rda_data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vxEYGiyiwe"}],"identifier":"save-annual-mean-to-annual-means-folder-within-rda-data","label":"Save annual mean to annual_means folder within rda_data","html_id":"save-annual-mean-to-annual-means-folder-within-rda-data","implicit":true,"key":"AaRp2mTIt8"}],"key":"pcs2TAO3Zw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# %%time\n# temp_2m_annual.to_dataset().to_zarr(annual_means + 'temp_2m_annual_1940_2023.zarr',mode='w')","key":"Ucgti5OXeP"},{"type":"output","id":"3zvn9rno4PO28tparNXzH","data":[],"key":"jIGGVSji1U"}],"key":"v8IlpArIow"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"temp_2m_annual = xr.open_zarr(annual_means + 'temp_2m_annual_1940_2023.zarr').VAR_2T\ntemp_2m_annual ","key":"Vp5JtdABLL"},{"type":"output","id":"B8SBeCRS2tAIEEojnhmm5","data":[],"key":"KrokW1IDZI"}],"key":"yo4rdXS3PD"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\ntemp_2m_annual.isel(time=0).plot()","key":"I6j9Islqw3"},{"type":"output","id":"Ts3jkFJ-gYiydAhmez-GD","data":[],"key":"tlKTv9hJjJ"}],"key":"TWhEcY8NFG"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Close up the cluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aBoqV7nlvt"}],"identifier":"close-up-the-cluster","label":"Close up the cluster","html_id":"close-up-the-cluster","implicit":true,"key":"ljSMR45Ck9"}],"key":"oEv8Ztk0zL"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"cluster.close()","key":"Vw2XIC1xHb"},{"type":"output","id":"yCcV9adBBgmco_I742B2r","data":[],"key":"i0zsVQEVmi"}],"key":"aMyIOoDHiX"}],"key":"nTuZ35zNx4"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Creating an Interactive Dashboard using hvPlot and Panel","url":"/notebooks/dashboard","group":"Visualization Notebooks"},"next":{"title":"Access ERA5 data from NCAR’s Research Data Archive and compute anomaly","url":"/notebooks/era5-anomaly","group":"Preprocessing Notebooks for NCAR RDA"}}},"domain":"http://localhost:3000"}