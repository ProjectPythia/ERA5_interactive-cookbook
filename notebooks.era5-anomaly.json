{"version":2,"kind":"Notebook","sha256":"3f11dc9c3d2a95e714a1c3c334749070e80794ad6df176472965012f179f59c6","slug":"notebooks.era5-anomaly","location":"/notebooks/06_era5_anomaly.ipynb","dependencies":[],"frontmatter":{"title":"Access ERA5 data from NCAR’s Research Data Archive and compute anomaly","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/projectpythia/ERA5_interactive-cookbook","affiliations":[{"id":"University at Albany (State University of New York)","name":"University at Albany (State University of New York)"},{"id":"UCAR/NCAR","name":"UCAR/NCAR"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/ERA5_interactive-cookbook/blob/main/notebooks/06_era5_anomaly.ipynb","exports":[{"format":"ipynb","filename":"06_era5_anomaly.ipynb","url":"/ERA5_interactive-cookbook/build/06_era5_anomaly-5cb608f4c8f95748d7e9cfc7958d3579.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WDAXmDoJFn"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"w4Es70xUgI"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"ERA-5 Dataset is available from NCAR’s RDA in netcdf format as hourly files. A subset of this dataset is processed into Zarr format and available from NCAR RDA endpoints. To learn how you can create Zarr files from NCAR RDA netcdf files, please see ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EgfCW9RfQr"},{"type":"link","url":"/notebooks/data-preprocessing","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"this notebook","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"w1wC2limru"}],"urlSource":"./05_data_preprocessing.ipynb","dataUrl":"/notebooks.data-preprocessing.json","internal":true,"protocol":"file","key":"kIuv7JT0As"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QmfmJFEQq7"}],"key":"Y9eB0vC636"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"In this notebook,","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"vtEBL3OJJP"}],"key":"Ak70OgrVSV"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"We will read data zarr stores from NCAR’s RDA endpoint","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"YZjMN0NcNZ"}],"key":"CqUZhm2hgD"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Compute temperature anomaly for the years 1940-2023","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"O90qkRxhgL"}],"key":"EVI5ooFcHm"}],"key":"njrAwPLbRx"}],"key":"E2pBkeYkhg"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yK1TJndlH3"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"neOorr5Pwj"},{"type":"table","position":{"start":{"line":3,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WKlgQTaLsA"}],"key":"n85iUhSlDN"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eRJIl5iJ01"}],"key":"sfMm0p0Ipm"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"z84lb1UvnS"}],"key":"UvjXRN6D32"}],"key":"TCSk8AIUg7"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/xarray.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Intro to Xarray","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"nd4K5Qkbnn"}],"urlSource":"https://foundations.projectpythia.org/core/xarray.html","key":"WW4MoifFUZ"}],"key":"zBzYQzpGzr"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"oWRBmoSXlF"}],"key":"hbs0VzOnsb"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[],"key":"IH2V80jf9T"}],"key":"pWFrvyk42K"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://projectpythia.org/intake-cookbook/notebooks/intake_introduction.html","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Intro to Intake","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"lyuUqGSQwz"}],"urlSource":"https://projectpythia.org/intake-cookbook/notebooks/intake_introduction.html","key":"hhs4lemB5P"}],"key":"tnhCkUdSis"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"u19u2oENVD"}],"key":"v3LJLcdXsf"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[],"key":"Rg1iAyR8VQ"}],"key":"X5d98mLaWo"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://zarr.readthedocs.io/en/stable/","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Understanding of Zarr","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"fp3r5OznQy"}],"urlSource":"https://zarr.readthedocs.io/en/stable/","key":"ECBOMH2ytE"}],"key":"C5wZfGdE2P"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"wdP1ltSPs4"}],"key":"Ojta3yHHrR"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[],"key":"R8Qco3MTEz"}],"key":"m7PTnioTij"}],"key":"GkXuoTyBva"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"e0V3LSjPe8"}],"key":"XqXmgPpsFL"},{"type":"text","value":": 30 minutes","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"h5hiZW66g1"}],"key":"uHNUJQ5sWC"}],"key":"oWOZn2Oa5D"}],"key":"VTymyL0MwT"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"x6OLryA8ib"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"h12diBbSRf"}],"key":"P8BNnol2hf"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import matplotlib.pyplot as plt\nimport numpy as np\nimport xarray as xr\nimport intake_esm\nimport intake\nimport pandas as pd\nimport cartopy.crs as ccrs  # Correct import for coordinate reference systems\nimport cartopy.feature as cfeature\nfrom holoviews import opts\nimport geoviews as gv\nimport holoviews as hv\nimport aiohttp","key":"VP2moqh9kN"},{"type":"output","id":"enyruyaH2734R0s7GpZjv","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mModuleNotFoundError\u001b[39m                       Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[1]\u001b[39m\u001b[32m, line 4\u001b[39m\n\u001b[32m      2\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mnumpy\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mnp\u001b[39;00m\n\u001b[32m      3\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mxarray\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mxr\u001b[39;00m\n\u001b[32m----> \u001b[39m\u001b[32m4\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mintake_esm\u001b[39;00m\n\u001b[32m      5\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mintake\u001b[39;00m\n\u001b[32m      6\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mpandas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mpd\u001b[39;00m\n\n\u001b[31mModuleNotFoundError\u001b[39m: No module named 'intake_esm'","ename":"ModuleNotFoundError","evalue":"No module named 'intake_esm'"}],"key":"hkqkoqjOTY"}],"key":"GUuq98CtcA"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Specify global variables","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lLUpFN7czl"}],"identifier":"specify-global-variables","label":"Specify global variables","html_id":"specify-global-variables","implicit":true,"key":"lALvEVW06Q"}],"key":"xA2dZFugqr"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"baseline_year_start = 1940\nbaseline_year_end   = 1949\ncurrent_year  = 2023","key":"ZdDbKBytmy"},{"type":"output","id":"HdprzpWgYGWRr0AuewjCv","data":[],"key":"DrZIJay5Wh"}],"key":"cJWTNFNtY4"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"rda_data          = '/gpfs/csfs1/collections/rda/data/'\nrda_url           = 'https://data.rda.ucar.edu/'\n#era5_catalog      = rda_url + 'pythia_intake_catalogs/era5_catalog.json'\n#\nannual_means      =  rda_url + 'pythia_era5_24/annual_means/'\nannual_means_posix=  rda_data + 'pythia_era5_24/annual_means/'\ntemp_annual_means =  annual_means + ''\n#\nprint(annual_means)","key":"GFV5IV9V2s"},{"type":"output","id":"OKk_HCe3JljFychMl0gy9","data":[],"key":"J8w2g9GJea"}],"key":"wAsOCqSNJJ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a Dask cluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KvRWwbL56c"}],"identifier":"create-a-dask-cluster","label":"Create a Dask cluster","html_id":"create-a-dask-cluster","implicit":true,"key":"tbTadJ98L9"}],"key":"dq711X7C9e"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Dask Introduction","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"teaxxgLyZO"}],"identifier":"dask-introduction","label":"Dask Introduction","html_id":"dask-introduction","implicit":true,"key":"bd4PX3sT79"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"link","url":"https://www.dask.org/","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Dask","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FDxtbT0yx9"}],"urlSource":"https://www.dask.org/","key":"jOOVMMA0He"},{"type":"text","value":" is a solution that enables the scaling of Python libraries. It mimics popular scientific libraries such as numpy, pandas, and xarray that enables an easier path to parallel processing without having to refactor code.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dESrP3qkrU"}],"key":"apTxrA93As"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"There are 3 components to parallel processing with Dask: the client, the scheduler, and the workers.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"cAHsa070Dn"}],"key":"pDEd0m7QdC"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"The Client is best envisioned as the application that sends information to the Dask cluster. In Python applications this is handled when the client is defined with ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"SZOXJaIUKR"},{"type":"inlineCode","value":"client = Client(CLUSTER_TYPE)","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"t99i7v3jD6"},{"type":"text","value":". A Dask cluster comprises of a single scheduler that manages the execution of tasks on workers. The ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"q0Lh92e0wF"},{"type":"inlineCode","value":"CLUSTER_TYPE","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"DUSjV3Kwzt"},{"type":"text","value":" can be defined in a number of different ways.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"jmCUyVUN4z"}],"key":"PdvMuTEmMf"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"There is LocalCluster, a cluster running on the same hardware as the application and sharing the available resources, directly in Python with ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"GqZAyq1pkm"},{"type":"inlineCode","value":"dask.distributed","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"T0gIxo71tZ"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"GS2gvBzuQr"}],"key":"NRFnHGRM7c"}],"key":"t4KGjmfzje"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"In certain JupyterHubs Dask Gateway may be available and a dedicated dask cluster with its own resources can be created dynamically with ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"WiIEopmw5e"},{"type":"inlineCode","value":"dask.gateway","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"mSPZLWIZGo"},{"type":"text","value":".","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"wG6BZdBGye"}],"key":"coLTlOHRBo"}],"key":"IQkF8m27nZ"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"On HPC systems ","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"KPDlxUtPz6"},{"type":"inlineCode","value":"dask_jobqueue","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"zLEjkCLCPT"},{"type":"text","value":" is used to connect to the HPC Slurm and PBS job schedulers to provision resources.","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"KsYdd9OLlI"}],"key":"cFTJLNpwWq"}],"key":"AgnucwRKqm"}],"key":"jheGUCNWZ8"},{"type":"paragraph","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"bPnZ633dZ9"},{"type":"inlineCode","value":"dask.distributed","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"IyStqamRz2"},{"type":"text","value":" client python module can also be used to connect to existing clusters. A Dask Scheduler and Workers can be deployed in containers, or on Kubernetes, without using a Python function to create a dask cluster. The ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"h01OF7KmID"},{"type":"inlineCode","value":"dask.distributed","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"VKeXZsjTJC"},{"type":"text","value":" Client is configured to connect to the scheduler either by container name, or by the Kubernetes service name.","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"fpVlhqMAMN"}],"key":"OgubTWuZvf"}],"key":"ciN6wAoEbJ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Select the Dask cluster type","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"u9TH3amDzF"}],"identifier":"select-the-dask-cluster-type","label":"Select the Dask cluster type","html_id":"select-the-dask-cluster-type","implicit":true,"key":"zouKvvbXEp"}],"key":"eDunRax4NJ"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The default will be ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SjaipVgjSK"},{"type":"inlineCode","value":"LocalCluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"U3fPjWH3AA"},{"type":"text","value":" as that can run on any system.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NX6xUBQgJs"}],"key":"fDGKp0GV27"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"If running on a HPC computer with a PBS Scheduler, set to True. Otherwise, set to False.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"N3Z75xiZYH"}],"key":"cGHuulTCsR"}],"key":"DHLJHmiZMR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"USE_PBS_SCHEDULER = False","key":"utpMTMj453"},{"type":"output","id":"BiYyjAREUX8t-5tCxzdPf","data":[],"key":"N0SXIumsMB"}],"key":"nE6FZ8zk7c"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"If running on Jupyter server with Dask Gateway configured, set to True. Otherwise, set to False.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JqwnIBEpsx"}],"key":"Ky1IYCuzNn"}],"key":"ACXF6aDn5b"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"USE_DASK_GATEWAY = False","key":"AQOds0UTYA"},{"type":"output","id":"OmxnPSMAfd6OFyv28Mq4Q","data":[],"key":"G7Kz8gMhJB"}],"key":"bPd2VgYHrO"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Python function for a PBS Cluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EzpeTUy7TQ"}],"key":"ROVLovvBWW"}],"key":"OdwXItViho"}],"key":"qntOhAi1cn"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Create a PBS cluster object\ndef get_pbs_cluster():\n    \"\"\" Create cluster through dask_jobqueue.   \n    \"\"\"\n    from dask_jobqueue import PBSCluster\n    cluster = PBSCluster(\n        job_name = 'dask-pythia-24',\n        cores = 1,\n        memory = '4GiB',\n        processes = 1,\n        local_directory = rda_scratch + '/dask/spill',\n        resource_spec = 'select=1:ncpus=1:mem=4GB',\n        queue = 'casper',\n        walltime = '1:00:00',\n        #interface = 'ib0'\n        interface = 'ext'\n    )\n    return cluster","key":"Y16dljzg5w"},{"type":"output","id":"5a3ssmdrp544SYq0EnuY3","data":[],"key":"H3GSHSg7GE"}],"key":"kqFOC6FBLv"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Python function for a Gateway Cluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KGQF9mOxX9"}],"key":"jGEChatTXI"}],"key":"eEaoI8StA0"}],"key":"lGRrBUSkwM"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def get_gateway_cluster():\n    \"\"\" Create cluster through dask_gateway\n    \"\"\"\n    from dask_gateway import Gateway\n\n    gateway = Gateway()\n    cluster = gateway.new_cluster()\n    cluster.adapt(minimum=2, maximum=4)\n    return cluster","key":"OZlUnIrASM"},{"type":"output","id":"4c1nLjvF5GxBvxcT3B-9h","data":[],"key":"NeLW44NqdG"}],"key":"bMpytcsJNM"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Python function for a Local Cluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hCoeuwr0EZ"}],"key":"oEUSSVRgec"}],"key":"GmCcEKgSCk"}],"key":"h1ZTvQ3cod"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def get_local_cluster():\n    \"\"\" Create cluster using the Jupyter server's resources\n    \"\"\"\n    from distributed import LocalCluster, performance_report\n    cluster = LocalCluster()    \n\n    cluster.scale(4)\n    return cluster","key":"hiDbbnYAmI"},{"type":"output","id":"RUrcLAnoPNFbilU-Z1dSe","data":[],"key":"Wbqlx6wkn1"}],"key":"OxuqUT2NmF"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Python logic to select the Dask Cluster type","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YXHQiWPrtr"}],"key":"NU9pDexeAc"}],"key":"R1FHzPBEVu"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This uses True/False boolean logic based on the variables set in the previous cells","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PZE0BPWr5P"}],"key":"BFXc8mu1EK"}],"key":"KuuOTYpJZA"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Obtain dask cluster in one of three ways\n\nif USE_PBS_SCHEDULER:\n    cluster = get_pbs_cluster()\nelif USE_DASK_GATEWAY:\n    cluster = get_gateway_cluster()\nelse:\n    cluster = get_local_cluster()\n\n# Connect to cluster\nfrom distributed import Client\nclient = Client(cluster)\n\n# Display cluster dashboard URL\ncluster","key":"pqxLAUu1M3"},{"type":"output","id":"Ek6Q5_N__INFjdjmR0eMB","data":[],"key":"K9K3eDM8dp"}],"key":"wVuupqGTqy"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Open ERA5 annual means file","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vYsxpUvAkn"}],"identifier":"open-era5-annual-means-file","label":"Open ERA5 annual means file","html_id":"open-era5-annual-means-file","implicit":true,"key":"saXsmBmEQt"}],"key":"txQzuLBAC5"},{"type":"block","kind":"notebook-code","data":{"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"baseline_temp = temp_2m_annual.sel(time= \\\n                                   temp_2m_annual.time.dt.year.isin(range(baseline_year_start, baseline_year_end+1))).mean('time')\nbaseline_temp ","key":"I9uQ95mIJM"},{"type":"output","id":"zeuOMqaidUUypR-UuMJ0E","data":[],"key":"RUUh3Jug68"}],"key":"oBjTbFG9bh"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"temp_anomaly = temp_2m_annual - baseline_temp\ntemp_anomaly","key":"q6yc4owqih"},{"type":"output","id":"LlK2HirjxpxzAkh78KiR0","data":[],"key":"WjFhNioBWV"}],"key":"KUuvlkowGI"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Save anomaly","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tClKOmIDMC"}],"identifier":"save-anomaly","label":"Save anomaly","html_id":"save-anomaly","implicit":true,"key":"mARzxTMO2U"}],"key":"wFCN9hiICk"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# %%time\n# temp_anomaly.to_dataset().to_zarr(annual_means_posix + 'temp_anomaly_wrt_1940_1950.zarr')","key":"mw9xU6wLPK"},{"type":"output","id":"80JdLX3WwIz-919tAJUZ-","data":[],"key":"vY9ASQ3VE5"}],"key":"iMzzRKeCBJ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"temp_anomaly = xr.open_zarr(annual_means_posix + 'temp_anomaly_wrt_1940_1950.zarr').VAR_2T\ntemp_anomaly","key":"cLXVbqM3yp"},{"type":"output","id":"CCcH05DYPUwYg22ME_Ts9","data":[],"key":"MpZ3bySxmk"}],"key":"hU8w1skTrP"},{"type":"block","kind":"notebook-content","children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the temperature anomaly","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"onr3q19E92"}],"key":"rf9GIx1C6Y"}],"key":"Teb3z48ZfG"}],"key":"p97hApVtUC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"temp_anomaly.isel(time=83).plot()","key":"pvL76rQepd"},{"type":"output","id":"_-W1ynPW4C9B8inLz6v7v","data":[],"key":"u4d8qSi3Km"}],"key":"pUZcxLbDBN"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Close the Dask Cluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tE4VfHp9nb"}],"identifier":"close-the-dask-cluster","label":"Close the Dask Cluster","html_id":"close-the-dask-cluster","implicit":true,"key":"cIffMle2hu"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"It’s best practice to close the Dask cluster when it’s no longer needed to free up the compute resources used.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"p2M2MX9QTH"}],"key":"JVZm45Ix29"}],"key":"Um8QcuUwQX"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"cluster.close()","key":"VGxkDKybrG"},{"type":"output","id":"0AAfhVK0I2V5zu3iQw-fk","data":[],"key":"hux1ATmEly"}],"key":"rZ3apl9uUQ"}],"key":"Ub9K8URbEV"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Generate annual/yearly zarr stores from hourly ERA5 NetCDF files on NCAR’s Research Data Archive","url":"/notebooks/data-preprocessing","group":"Preprocessing Notebooks for NCAR RDA"}}},"domain":"http://localhost:3000"}